{"version":3,"file":"static/js/813.8b030d67.chunk.js","mappings":"iPAMO,SAASA,EAAT,GAA6C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KAGA,OACE,UAAC,IAAD,YACE,SAAC,EAAAC,EAAD,CACEC,KAAMH,EAAO,OAAS,WACtBI,YAAY,iBACZP,MAAOA,EACPC,SAAUA,KAEZ,SAAC,IAAD,CAAmBO,MAAM,SAAzB,UACE,SAAC,IAAD,CAAQC,EAAE,UAAUC,QAXN,kBAAMN,GAASD,EAAf,EAW4BQ,YAAY,OAAtD,SACGR,EAAO,OAAS,aAK1B,C,sLCxBD,EAAuB,2B,UCYVS,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCN,EAAAA,EAAAA,UAAS,IAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAoCR,EAAAA,EAAAA,UAAS,IAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KACA,GAA0CV,EAAAA,EAAAA,UAAS,IAAnD,eAAOW,EAAP,KAAsBC,EAAtB,KAqCA,OACE,kBAAMC,UAAWC,EAAUC,SApCR,SAAAC,GACnBA,EAAEC,iBAEF,IAAIC,GAAU,EACTjB,EAIHO,EAAa,KAHbA,EAAa,wBACbU,GAAU,GAKPf,EAIHO,EAAc,KAHdA,EAAc,qBACdQ,GAAU,GAKPb,EAIHO,EAAiB,KAHjBA,EAAiB,wBACjBM,GAAU,GAKPA,IAILpB,GAASqB,EAAAA,EAAAA,IAAS,CAAElB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,IACb,EAGoDc,aAAa,MAAhE,WACE,UAAC,KAAD,CAAaC,YAAad,EAA1B,WACE,SAAC,IAAD,wBACA,SAAC,EAAAjB,EAAD,CACEC,KAAK,OACLU,KAAK,OACLT,YAAY,kBACZP,MAAOgB,EACPf,SAAU,SAAA8B,GAAC,OAAId,EAAQc,EAAEM,OAAOrC,MAArB,KAEb,SAAC,KAAD,UAAmBsB,QAGrB,UAAC,KAAD,CAAac,YAAaZ,EAA1B,WACE,SAAC,IAAD,qBACA,SAAC,EAAAnB,EAAD,CACEC,KAAK,QACLU,KAAK,QACLT,YAAY,mBACZP,MAAOkB,EACPjB,SAAU,SAAA8B,GAAC,OAAIZ,EAASY,EAAEM,OAAOrC,MAAtB,KAEb,SAAC,KAAD,UAAmBwB,QAGrB,UAAC,KAAD,CAAaY,YAAaV,EAA1B,WACE,SAAC,IAAD,wBACA,SAAC3B,EAAA,EAAD,CACEQ,YAAY,iBACZP,MAAOoB,EACPnB,SAAU,SAAA8B,GAAC,OAAIV,EAAYU,EAAEM,OAAOrC,MAAzB,KAEb,SAAC,KAAD,UAAmB0B,QAGrB,SAAC,IAAD,CAAQY,GAAI,EAAGC,YAAY,OAAOjC,KAAK,SAAvC,wBAKL,EC/Fc,SAASkC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAC7B,EAAD,MAGL,C","sources":["components/RegisterForm/PasswordInput.js","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.js","pages/Register.jsx"],"sourcesContent":["import React from 'react';\nimport { Input, Button, InputGroup, InputRightElement } from '@chakra-ui/react';\n\n// export const PasswordInput = React.forwardRef((props, ref) => {\n//   const [show, setShow] = React.useState(false);\n//   const handleClick = () => setShow(!show);\nexport function PasswordInput({ value, onChange }) {\n  const [show, setShow] = React.useState(false);\n  const handleClick = () => setShow(!show);\n\n  return (\n    <InputGroup>\n      <Input\n        type={show ? 'text' : 'password'}\n        placeholder=\"Enter password\"\n        value={value} // Передаем значение\n        onChange={onChange} // Передаем функцию обработки изменений\n      />\n      <InputRightElement width=\"4.5rem\">\n        <Button h=\"1.75rem\" onClick={handleClick} marginRight=\"1rem\">\n          {show ? 'Hide' : 'Show'}\n        </Button>\n      </InputRightElement>\n    </InputGroup>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  FormErrorMessage,\n} from '@chakra-ui/react';\nimport { PasswordInput } from './PasswordInput';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let isValid = true;\n    if (!name) {\n      setNameError('Username is required');\n      isValid = false;\n    } else {\n      setNameError('');\n    }\n\n    if (!email) {\n      setEmailError('Email is required');\n      isValid = false;\n    } else {\n      setEmailError('');\n    }\n\n    if (!password) {\n      setPasswordError('Password is required');\n      isValid = false;\n    } else {\n      setPasswordError('');\n    }\n\n    if (!isValid) {\n      return;\n    }\n\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormControl isInvalid={!!nameError}>\n        <FormLabel>Username</FormLabel>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter your name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n        <FormErrorMessage>{nameError}</FormErrorMessage>\n      </FormControl>\n\n      <FormControl isInvalid={!!emailError}>\n        <FormLabel>Email</FormLabel>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter your email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <FormErrorMessage>{emailError}</FormErrorMessage>\n      </FormControl>\n\n      <FormControl isInvalid={!!passwordError}>\n        <FormLabel>Password</FormLabel>\n        <PasswordInput\n          placeholder=\"Enter password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n        <FormErrorMessage>{passwordError}</FormErrorMessage>\n      </FormControl>\n\n      <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n        Register\n      </Button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["PasswordInput","value","onChange","React","show","setShow","I","type","placeholder","width","h","onClick","marginRight","RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","className","css","onSubmit","e","preventDefault","isValid","register","autoComplete","isInvalid","target","mt","colorScheme","Register","Helmet"],"sourceRoot":""}