{"version":3,"file":"static/js/769.9bc09159.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/Сontacts.jsx"],"sourcesContent":["export const selectLoading = state => state.tasks.loading;\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"text\":\"Filter_text__uqQRu\",\"Input\":\"Filter_Input__fqOVl\"};","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  // FormControl,\n  // FormLabel,\n  Input,\n  // Button,\n  // FormErrorMessage,\n} from '@chakra-ui/react';\nimport { updateFilter } from '../../redux/contacts/slice';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFieldFilter = e => dispatch(updateFilter(e.currentTarget.value));\n\n  return (\n    <label className={css.label}>\n      <p className={css.text}>Find contacts by name</p>\n      <Input\n        className={css.Input}\n        type=\"text\"\n        value={filter}\n        onChange={changeFieldFilter}\n      />\n    </label>\n  );\n}\n\nFilter.prototype = {\n  filter: PropTypes.string.isRequired,\n  updateFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__K-zLN\",\"icon\":\"Contact_icon__uPRlS\",\"button\":\"Contact_button__F+kJb\",\"number\":\"Contact_number__aT6T9\"};","import PropTypes from 'prop-types';\nimport { FaTrash, FaUserAlt } from 'react-icons/fa';\nimport css from './Contact.module.css';\n\nfunction Contact({ name, number, onDeleteContact, contactId }) {\n  return (\n    <>\n      <div className={css.wrapper}>\n        <span className={css.icon}>\n          <FaUserAlt />\n        </span>\n        <p>{name}</p>\n      </div>\n      <div className={css.wrapper}>\n        <p className={css.number}>{number}</p>\n        <button\n          className={css.button}\n          type=\"button\"\n          onClick={() => onDeleteContact(contactId)}\n        >\n          <FaTrash />\n        </button>\n      </div>\n    </>\n  );\n}\n\nContact.prototype = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\"};","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, getContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport Contact from '../Contact/Contact';\nimport css from './ContactList.module.css';\n\nfunction ContactList() {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const deleteSelectedContact = contactId => dispatch(deleteContact(contactId));\n\n  const filtredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContactList = filtredContacts();\n\n  return (\n    <ul>\n      {filteredContactList.map(({ id, name, number }) => {\n        return (\n          <li className={css.item} key={id}>\n            <Contact\n              name={name}\n              number={number}\n              onDeleteContact={() => deleteSelectedContact(id)}\n              contactId={id}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"title\":\"ContactForm_title__jZguf\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  // FormControl,\n  // FormLabel,\n  Input,\n  // Button,\n  // FormErrorMessage,\n} from '@chakra-ui/react';\nimport { addContact } from '../../redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChangeName = e => setName(e.currentTarget.value);\n  const onChangeNumber = e => setNumber(e.currentTarget.value);\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    const newElement = { id: nanoid(), name, number };\n\n    if (contacts.some(contact => contact.name === name)) {\n      window.alert(`${name} is already in the contact list.`);\n      return;\n    } else {\n      dispatch(addContact(newElement));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={onSubmitForm}>\n      <label className={css.label}>\n        <span className={css.title}>Name</span>\n        <Input\n          // className={css.input}\n          onChange={onChangeName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-ЯєЄі-їІ-Ї]+(([' -][a-zA-Zа-яА-ЯєЄі-їІ-Ї ])?[a-zA-Zа-яА-ЯєЄі-їІ-Ї]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        <span className={css.title}>Number</span>\n        <Input\n          // className={css.input}\n          onChange={onChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.prototype = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import Filter from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport {\n  getContacts,\n  // , selectLoading\n} from '../redux/contacts/selectors';\nimport ContactList from '../components/ContactList/ContactList';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport ContactForm from '../components/ContactForm/ContactForm';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  // const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      {/* <div>{isLoading && 'Request in progress...'}</div> */}\n      <Filter />\n      {contacts.length > 0 && <ContactList />}\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","Filter","useSelector","dispatch","useDispatch","className","css","I","type","value","onChange","e","updateFilter","currentTarget","prototype","PropTypes","Contact","name","number","onDeleteContact","contactId","onClick","ContactList","filteredContactList","normalizedFilter","toLowerCase","contact","includes","filtredContacts","map","id","deleteContact","isRequired","ContactForm","useState","setName","setNumber","onSubmitForm","preventDefault","newElement","nanoid","some","window","alert","addContact","reset","onSubmit","pattern","title","required","ContactsPage","useEffect","fetchContacts","Helmet","length"],"sourceRoot":""}